extends Node

enum {
	DOOR,
	POWERUP,
}

# Array de n√∫meros
var num_gris := [
	load("res://assets/fonts/gris/0.png"),
	load("res://assets/fonts/gris/1.png"),
	load("res://assets/fonts/gris/2.png"),
	load("res://assets/fonts/gris/3.png"),
	load("res://assets/fonts/gris/4.png"),
	load("res://assets/fonts/gris/5.png"),
	load("res://assets/fonts/gris/6.png"),
	load("res://assets/fonts/gris/7.png"),
	load("res://assets/fonts/gris/8.png"),
	load("res://assets/fonts/gris/9.png"),
]

var num_negra := [
	load("res://assets/fonts/negra/0.png"),
	load("res://assets/fonts/negra/1.png"),
	load("res://assets/fonts/negra/2.png"),
	load("res://assets/fonts/negra/3.png"),
	load("res://assets/fonts/negra/4.png"),
	load("res://assets/fonts/negra/5.png"),
	load("res://assets/fonts/negra/6.png"),
	load("res://assets/fonts/negra/7.png"),
	load("res://assets/fonts/negra/8.png"),
	load("res://assets/fonts/negra/9.png"),
]

# array con el lado izquierdo de los ladrillos
var left_bricks: Dictionary = {
	"a1": [false, Vector2(24, 48)],
	"a2": [false, Vector2(24, 64)],
	"a3": [false, Vector2(24, 80)],
	"a4": [false, Vector2(24, 96)],
	"a5": [false, Vector2(24, 112)],
	"a6": [false, Vector2(24, 128)],
	"a7": [false, Vector2(24, 144)],
	"a8": [false, Vector2(24, 160)],
	"a9": [false, Vector2(24, 176)],
	"a10": [false, Vector2(24, 192)],
	"a11": [false, Vector2(24, 208)],
	"b1": [false, Vector2(40, 48)],
	"b2": [false, Vector2(40, 64)],
	"b3": [false, Vector2(40, 80)],
	"b4": [false, Vector2(40, 96)],
	"b5": [false, Vector2(40, 112)],
	"b6": [false, Vector2(40, 128)],
	"b7": [false, Vector2(40, 144)],
	"b8": [false, Vector2(40, 160)],
	"b9": [false, Vector2(40, 176)],
	"b10": [false, Vector2(40, 192)],
	"b11": [false, Vector2(40, 208)],
	"c1": [false, Vector2(56, 48)],
	"c2": [false, Vector2(56, 64)],
	"c3": [false, Vector2(56, 80)],
	"c4": [false, Vector2(56, 96)],
	"c5": [false, Vector2(56, 112)],
	"c6": [false, Vector2(56, 128)],
	"c7": [false, Vector2(56, 144)],
	"c8": [false, Vector2(56, 160)],
	"c9": [false, Vector2(56, 176)],
	"c10": [false, Vector2(56, 192)],
	"c11": [false, Vector2(56, 208)],
	"d1": [false, Vector2(72, 48)],
	"d2": [false, Vector2(72, 64)],
	"d3": [false, Vector2(72, 80)],
	"d4": [false, Vector2(72, 96)],
	"d5": [false, Vector2(72, 112)],
	"d6": [false, Vector2(72, 128)],
	"d7": [false, Vector2(72, 144)],
	"d8": [false, Vector2(72, 160)],
	"d9": [false, Vector2(72, 176)],
	"d10": [false, Vector2(72, 192)],
	"d11": [false, Vector2(72, 208)],
	"e1": [false, Vector2(88, 48)],
	"e2": [false, Vector2(88, 64)],
	"e3": [false, Vector2(88, 80)],
	"e4": [false, Vector2(88, 96)],
	"e5": [false, Vector2(88, 112)],
	"e6": [false, Vector2(88, 128)],
	"e7": [false, Vector2(88, 144)],
	"e8": [false, Vector2(88, 160)],
	"e9": [false, Vector2(88, 176)],
	"e10": [false, Vector2(88, 192)],
	"e11": [false, Vector2(88, 208)],
	"f1": [false, Vector2(104, 48)],
	"f2": [false, Vector2(104, 64)],
	"f3": [false, Vector2(104, 80)],
	"f4": [false, Vector2(104, 96)],
	"f5": [false, Vector2(104, 112)],
	"f6": [false, Vector2(104, 128)],
	"f7": [false, Vector2(104, 144)],
	"f8": [false, Vector2(104, 160)],
	"f9": [false, Vector2(104, 176)],
	"f10": [false, Vector2(104, 192)],
	"f11": [false, Vector2(104, 208)],
	"g1": [false, Vector2(120, 48)],
	"g2": [false, Vector2(120, 64)],
	"g3": [false, Vector2(120, 80)],
	"g4": [false, Vector2(120, 96)],
	"g5": [false, Vector2(120, 112)],
	"g6": [false, Vector2(120, 128)],
	"g7": [false, Vector2(120, 144)],
	"g8": [false, Vector2(120, 160)],
	"g9": [false, Vector2(120, 176)],
	"g10": [false, Vector2(120, 192)],
	"g11": [false, Vector2(120, 208)],
	"h1": [false, Vector2(136, 48)],
	"h2": [false, Vector2(136, 64)],
	"h3": [false, Vector2(136, 80)],
	"h4": [false, Vector2(136, 96)],
	"h5": [false, Vector2(136, 112)],
	"h6": [false, Vector2(136, 128)],
	"h7": [false, Vector2(136, 144)],
	"h8": [false, Vector2(136, 160)],
	"h9": [false, Vector2(136, 176)],
	"h10": [false, Vector2(136, 192)],
	"h11": [false, Vector2(136, 208)],
	"i1": [false, Vector2(152, 48)],
	"i2": [false, Vector2(152, 64)],
	"i3": [false, Vector2(152, 80)],
	"i4": [false, Vector2(152, 96)],
	"i5": [false, Vector2(152, 112)],
	"i6": [false, Vector2(152, 128)],
	"i7": [false, Vector2(152, 144)],
	"i8": [false, Vector2(152, 160)],
	"i9": [false, Vector2(152, 176)],
	"i10": [false, Vector2(152, 192)],
	"i11": [false, Vector2(152, 208)],
	"j1": [false, Vector2(168, 48)],
	"j2": [false, Vector2(168, 64)],
	"j3": [false, Vector2(168, 80)],
	"j4": [false, Vector2(168, 96)],
	"j5": [false, Vector2(168, 112)],
	"j6": [false, Vector2(168, 128)],
	"j7": [false, Vector2(168, 144)],
	"j8": [false, Vector2(168, 160)],
	"j9": [false, Vector2(168, 176)],
	"j10": [false, Vector2(168, 192)],
	"j11": [false, Vector2(168, 208)],
	"k1": [false, Vector2(184, 48)],
	"k2": [false, Vector2(184, 64)],
	"k3": [false, Vector2(184, 80)],
	"k4": [false, Vector2(184, 96)],
	"k5": [false, Vector2(184, 112)],
	"k6": [false, Vector2(184, 128)],
	"k7": [false, Vector2(184, 144)],
	"k8": [false, Vector2(184, 160)],
	"k9": [false, Vector2(184, 176)],
	"k10": [false, Vector2(184, 192)],
	"k11": [false, Vector2(184, 208)],
	"l1": [false, Vector2(200, 48)],
	"l2": [false, Vector2(200, 64)],
	"l3": [false, Vector2(200, 80)],
	"l4": [false, Vector2(200, 96)],
	"l5": [false, Vector2(200, 112)],
	"l6": [false, Vector2(200, 128)],
	"l7": [false, Vector2(200, 144)],
	"l8": [false, Vector2(200, 160)],
	"l9": [false, Vector2(200, 176)],
	"l10": [false, Vector2(200, 192)],
	"l11": [false, Vector2(200, 208)],
	"m1": [false, Vector2(216, 48)],
	"m2": [false, Vector2(216, 64)],
	"m3": [false, Vector2(216, 80)],
	"m4": [false, Vector2(216, 96)],
	"m5": [false, Vector2(216, 112)],
	"m6": [false, Vector2(216, 128)],
	"m7": [false, Vector2(216, 144)],
	"m8": [false, Vector2(216, 160)],
	"m9": [false, Vector2(216, 176)],
	"m10": [false, Vector2(216, 192)],
	"m11": [false, Vector2(216, 208)],
	"n1": [false, Vector2(232, 48)],
	"n2": [false, Vector2(232, 64)],
	"n3": [false, Vector2(232, 80)],
	"n4": [false, Vector2(232, 96)],
	"n5": [false, Vector2(232, 112)],
	"n6": [false, Vector2(232, 128)],
	"n7": [false, Vector2(232, 144)],
	"n8": [false, Vector2(232, 160)],
	"n9": [false, Vector2(232, 176)],
	"n10": [false, Vector2(232, 192)],
	"n11": [false, Vector2(232, 208)],
	"o1": [false, Vector2(248, 48)],
	"o2": [false, Vector2(248, 64)],
	"o3": [false, Vector2(248, 80)],
	"o4": [false, Vector2(248, 96)],
	"o5": [false, Vector2(248, 112)],
	"o6": [false, Vector2(248, 128)],
	"o7": [false, Vector2(248, 144)],
	"o8": [false, Vector2(248, 160)],
	"o9": [false, Vector2(248, 176)],
	"o10": [false, Vector2(248, 192)],
	"o11": [false, Vector2(248, 208)],
}

# ladrillos del lado derecho
var right_bricks: Dictionary = {
	"a1": [false, Vector2(264, 48)],
	"a2": [false, Vector2(264, 64)],
	"a3": [false, Vector2(264, 80)],
	"a4": [false, Vector2(264, 96)],
	"a5": [false, Vector2(264, 112)],
	"a6": [false, Vector2(264, 128)],
	"a7": [false, Vector2(264, 144)],
	"a8": [false, Vector2(264, 160)],
	"a9": [false, Vector2(264, 176)],
	"a10": [false, Vector2(264, 192)],
	"a11": [false, Vector2(264, 208)],
	"b1": [false, Vector2(280, 48)],
	"b2": [false, Vector2(280, 64)],
	"b3": [false, Vector2(280, 80)],
	"b4": [false, Vector2(280, 96)],
	"b5": [false, Vector2(280, 112)],
	"b6": [false, Vector2(280, 128)],
	"b7": [false, Vector2(280, 144)],
	"b8": [false, Vector2(280, 160)],
	"b9": [false, Vector2(280, 176)],
	"b10": [false, Vector2(280, 192)],
	"b11": [false, Vector2(280, 208)],
	"c1": [false, Vector2(296, 48)],
	"c2": [false, Vector2(296, 64)],
	"c3": [false, Vector2(296, 80)],
	"c4": [false, Vector2(296, 96)],
	"c5": [false, Vector2(296, 112)],
	"c6": [false, Vector2(296, 128)],
	"c7": [false, Vector2(296, 144)],
	"c8": [false, Vector2(296, 160)],
	"c9": [false, Vector2(296, 176)],
	"c10": [false, Vector2(296, 192)],
	"c11": [false, Vector2(296, 208)],
	"d1": [false, Vector2(312, 48)],
	"d2": [false, Vector2(312, 64)],
	"d3": [false, Vector2(312, 80)],
	"d4": [false, Vector2(312, 96)],
	"d5": [false, Vector2(312, 112)],
	"d6": [false, Vector2(312, 128)],
	"d7": [false, Vector2(312, 144)],
	"d8": [false, Vector2(312, 160)],
	"d9": [false, Vector2(312, 176)],
	"d10": [false, Vector2(312, 192)],
	"d11": [false, Vector2(312, 208)],
	"e1": [false, Vector2(328, 48)],
	"e2": [false, Vector2(328, 64)],
	"e3": [false, Vector2(328, 80)],
	"e4": [false, Vector2(328, 96)],
	"e5": [false, Vector2(328, 112)],
	"e6": [false, Vector2(328, 128)],
	"e7": [false, Vector2(328, 144)],
	"e8": [false, Vector2(328, 160)],
	"e9": [false, Vector2(328, 176)],
	"e10": [false, Vector2(328, 192)],
	"e11": [false, Vector2(328, 208)],
	"f1": [false, Vector2(344, 48)],
	"f2": [false, Vector2(344, 64)],
	"f3": [false, Vector2(344, 80)],
	"f4": [false, Vector2(344, 96)],
	"f5": [false, Vector2(344, 112)],
	"f6": [false, Vector2(344, 128)],
	"f7": [false, Vector2(344, 144)],
	"f8": [false, Vector2(344, 160)],
	"f9": [false, Vector2(344, 176)],
	"f10": [false, Vector2(344, 192)],
	"f11": [false, Vector2(344, 208)],
	"g1": [false, Vector2(360, 48)],
	"g2": [false, Vector2(360, 64)],
	"g3": [false, Vector2(360, 80)],
	"g4": [false, Vector2(360, 96)],
	"g5": [false, Vector2(360, 112)],
	"g6": [false, Vector2(360, 128)],
	"g7": [false, Vector2(360, 144)],
	"g8": [false, Vector2(360, 160)],
	"g9": [false, Vector2(360, 176)],
	"g10": [false, Vector2(360, 192)],
	"g11": [false, Vector2(360, 208)],
	"h1": [false, Vector2(376, 48)],
	"h2": [false, Vector2(376, 64)],
	"h3": [false, Vector2(376, 80)],
	"h4": [false, Vector2(376, 96)],
	"h5": [false, Vector2(376, 112)],
	"h6": [false, Vector2(376, 128)],
	"h7": [false, Vector2(376, 144)],
	"h8": [false, Vector2(376, 160)],
	"h9": [false, Vector2(376, 176)],
	"h10": [false, Vector2(376, 192)],
	"h11": [false, Vector2(376, 208)],
	"i1": [false, Vector2(392, 48)],
	"i2": [false, Vector2(392, 64)],
	"i3": [false, Vector2(392, 80)],
	"i4": [false, Vector2(392, 96)],
	"i5": [false, Vector2(392, 112)],
	"i6": [false, Vector2(392, 128)],
	"i7": [false, Vector2(392, 144)],
	"i8": [false, Vector2(392, 160)],
	"i9": [false, Vector2(392, 176)],
	"i10": [false, Vector2(392, 192)],
	"i11": [false, Vector2(392, 208)],
	"j1": [false, Vector2(408, 48)],
	"j2": [false, Vector2(408, 64)],
	"j3": [false, Vector2(408, 80)],
	"j4": [false, Vector2(408, 96)],
	"j5": [false, Vector2(408, 112)],
	"j6": [false, Vector2(408, 128)],
	"j7": [false, Vector2(408, 144)],
	"j8": [false, Vector2(408, 160)],
	"j9": [false, Vector2(408, 176)],
	"j10": [false, Vector2(408, 192)],
	"j11": [false, Vector2(408, 208)],
	"k1": [false, Vector2(424, 48)],
	"k2": [false, Vector2(424, 64)],
	"k3": [false, Vector2(424, 80)],
	"k4": [false, Vector2(424, 96)],
	"k5": [false, Vector2(424, 112)],
	"k6": [false, Vector2(424, 128)],
	"k7": [false, Vector2(424, 144)],
	"k8": [false, Vector2(424, 160)],
	"k9": [false, Vector2(424, 176)],
	"k10": [false, Vector2(424, 192)],
	"k11": [false, Vector2(424, 208)],
	"l1": [false, Vector2(440, 48)],
	"l2": [false, Vector2(440, 64)],
	"l3": [false, Vector2(440, 80)],
	"l4": [false, Vector2(440, 96)],
	"l5": [false, Vector2(440, 112)],
	"l6": [false, Vector2(440, 128)],
	"l7": [false, Vector2(440, 144)],
	"l8": [false, Vector2(440, 160)],
	"l9": [false, Vector2(440, 176)],
	"l10": [false, Vector2(440, 192)],
	"l11": [false, Vector2(440, 208)],
	"m1": [false, Vector2(456, 48)],
	"m2": [false, Vector2(456, 64)],
	"m3": [false, Vector2(456, 80)],
	"m4": [false, Vector2(456, 96)],
	"m5": [false, Vector2(456, 112)],
	"m6": [false, Vector2(456, 128)],
	"m7": [false, Vector2(456, 144)],
	"m8": [false, Vector2(456, 160)],
	"m9": [false, Vector2(456, 176)],
	"m10": [false, Vector2(456, 192)],
	"m11": [false, Vector2(456, 208)],
	"n1": [false, Vector2(472, 48)],
	"n2": [false, Vector2(472, 64)],
	"n3": [false, Vector2(472, 80)],
	"n4": [false, Vector2(472, 96)],
	"n5": [false, Vector2(472, 112)],
	"n6": [false, Vector2(472, 128)],
	"n7": [false, Vector2(472, 144)],
	"n8": [false, Vector2(472, 160)],
	"n9": [false, Vector2(472, 176)],
	"n10": [false, Vector2(472, 192)],
	"n11": [false, Vector2(472, 208)],
}

# nivel del juego
var current_level: int = 1
var lives: int = 2

# variables globales para el Player
var player_has_detonator:bool = false
var player_bomb_limit:int = 1 #default limit


func get_level_bricks() -> int:
	return 50 + current_level * 3


func num_to_letter(num:int) -> String:
	match num:
		0:
			return 'a'
		1:
			return 'b'
		2:
			return 'c'
		3:
			return 'd'
		4:
			return 'e'
		5:
			return 'f'
		6:
			return 'g'
		7:
			return 'h'
		8:
			return 'i'
		9:
			return 'j'
		10:
			return 'k'
		11:
			return 'l'
		12:
			return 'm'
		13:
			return 'n'
		14:
			return 'o'
		_:
			return 'a'
